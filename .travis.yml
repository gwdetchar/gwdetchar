language: generic

env:
  global:
    - CONDA_PKGS_DIRS="${HOME}/.cache/conda/pkgs"

matrix:
  fast_finish: true

  include:
    - os: linux
      env: PYTHON_VERSION="3.6"
    - os: linux
      env: PYTHON_VERSION="3.7"
    - os: linux
      env: PYTHON_VERSION="3.8"
    - os: osx
      env: PYTHON_VERSION="3.6"
    - os: osx
      env: PYTHON_VERSION="3.7"
    - os: osx
      env: PYTHON_VERSION="3.8"

before_install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh;
    else
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - source "${HOME}/miniconda/etc/profile.d/conda.sh"
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - travis_retry conda update --quiet --yes conda
  # Useful for debugging any issues with conda
  - conda info --all

install:
  # create a conda environment
  - travis_retry conda create --quiet --yes --name gwdetchar python=${PYTHON_VERSION} pip setuptools
  - travis_retry conda activate gwdetchar
  # install testing dependencies with conda
  - travis_retry conda install --quiet --yes --update-deps --name gwdetchar
        coverage
        flake8
        pytest-cov
  # install a bunch of the larger/compiled runtime dependencies with conda
  - travis_retry conda install --quiet --yes --update-deps --name gwdetchar
        astropy
        gwpy
        jsmin
        lalsuite
        libsass
        lscsoft-glue
        lxml
        matplotlib
        numpy
        pandas
        pytz
        scipy
  # install new/updated requirements with pip
  - python -m pip install -r requirements.txt
  # install this version
  - python -m pip install --editable .

script:
  - python -m flake8 . bin/*
  - python -m pytest --verbose --cov --pyargs gwdetchar
  - bash ci/test-bin.sh

after_success:
  - travis_retry conda install --quiet --yes --name gwdetchar codecov
  - python -m coverage report
  - python -m codecov --flags $(uname) python${PYTHON_VERSION/./}

before_cache:
  - travis_retry conda clean --quiet --yes --all
  - rm -f $HOME/.cache/pip/log/debug.log
cache:
  pip: true
  directories:
    - ${HOME}/.cache/conda/pkgs
